// <auto-generated />
using System;
using ApiCore.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ApiCore.Data.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ApiCore.Entities.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("ChangeEmail")
                        .HasColumnName("change_email")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreatedById")
                        .HasColumnName("created_by")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnName("deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("DescriptionEn")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<bool>("ExportData")
                        .HasColumnName("export_data")
                        .HasColumnType("boolean");

                    b.Property<bool>("HasAdminRights")
                        .HasColumnName("has_admin_rights")
                        .HasColumnType("boolean");

                    b.Property<bool>("ImportData")
                        .HasColumnName("import_data")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.Property<int>("Order")
                        .HasColumnName("order")
                        .HasColumnType("integer");

                    b.Property<int>("ParentId")
                        .HasColumnName("parent_id")
                        .HasColumnType("integer");

                    b.Property<bool>("SendEmail")
                        .HasColumnName("send_email")
                        .HasColumnType("boolean");

                    b.Property<bool>("SendSms")
                        .HasColumnName("send_sms")
                        .HasColumnType("boolean");

                    b.Property<string>("SystemCode")
                        .HasColumnName("system_code")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("updated_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdatedById")
                        .HasColumnName("updated_by")
                        .HasColumnType("integer");

                    b.Property<bool>("WordPdfDownload")
                        .HasColumnName("word_pdf_download")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("UpdatedById");

                    b.ToTable("profiles");
                });

            modelBuilder.Entity("ApiCore.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreatedById")
                        .HasColumnName("created_by")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnName("deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnName("label")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<bool>("Master")
                        .HasColumnName("master")
                        .HasColumnType("boolean");

                    b.Property<string>("Owners")
                        .HasColumnName("owners")
                        .HasColumnType("text");

                    b.Property<int?>("ReportsToId")
                        .HasColumnName("reports_to_id")
                        .HasColumnType("integer");

                    b.Property<bool>("ShareData")
                        .HasColumnName("share_data")
                        .HasColumnType("boolean");

                    b.Property<string>("SystemCode")
                        .HasColumnName("system_code")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("updated_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdatedById")
                        .HasColumnName("updated_by")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ReportsToId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("ApiCore.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedByEmail")
                        .HasColumnName("created_by")
                        .HasColumnType("text");

                    b.Property<string>("Culture")
                        .HasColumnName("culture")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Currency")
                        .HasColumnName("currency")
                        .HasColumnType("character varying(3)")
                        .HasMaxLength(3);

                    b.Property<bool>("Deleted")
                        .HasColumnName("deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("first_name")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnName("full_name")
                        .HasColumnType("character varying(400)")
                        .HasMaxLength(400);

                    b.Property<bool>("IsActive")
                        .HasColumnName("is_active")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubscriber")
                        .HasColumnName("is_subscriber")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("last_name")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnName("password_hash")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnName("password_salt")
                        .HasColumnType("bytea");

                    b.Property<string>("Phone")
                        .HasColumnName("phone")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Picture")
                        .HasColumnName("picture")
                        .HasColumnType("text");

                    b.Property<int?>("ProfileId")
                        .HasColumnName("profile_id")
                        .HasColumnType("integer");

                    b.Property<int?>("RoleId")
                        .HasColumnName("role_id")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("updated_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedByEmail")
                        .HasColumnName("updated_by")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("Deleted");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("FullName");

                    b.HasIndex("ProfileId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UpdatedAt");

                    b.ToTable("users");
                });

            modelBuilder.Entity("ApiCore.Entities.Profile", b =>
                {
                    b.HasOne("ApiCore.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiCore.Entities.User", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedById");
                });

            modelBuilder.Entity("ApiCore.Entities.Role", b =>
                {
                    b.HasOne("ApiCore.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiCore.Entities.Role", "ReportsTo")
                        .WithMany()
                        .HasForeignKey("ReportsToId");

                    b.HasOne("ApiCore.Entities.User", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedById");
                });

            modelBuilder.Entity("ApiCore.Entities.User", b =>
                {
                    b.HasOne("ApiCore.Entities.Profile", "Profile")
                        .WithMany("Users")
                        .HasForeignKey("ProfileId");

                    b.HasOne("ApiCore.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");
                });
#pragma warning restore 612, 618
        }
    }
}
